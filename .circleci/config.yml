# Android CircleCI 2.0 configuration file
#
version: 2.1

executors:
  build:
    resource_class: medium
    docker:
#      - image: circleci/android:api-29
      - image: circleci/android@sha256:b6646fdf7457f61825526e7bfce364d8e533da6ceb1cdb98e371e94348ecc834
    working_directory: /home/circleci/project
    environment:
      JAVA_OPTS: -Xmx6200m
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'

  classic:
    machine:
      image: circleci/classic:201808-01

commands:
  setup_gradle:
    steps:
      - restore_cache:
          name: Restoring build gradle cache
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "core/build.gradle" }}-{{ checksum "core/version" }}-{{ checksum "inappmessaging/build.gradle" }}-{{ checksum "inappmessaging/version" }}-{{ checksum "notifications/build.gradle" }}-{{ checksum "notifications/version" }}-{{ checksum "variables/build.gradle" }}-{{ checksum "variables/version" }}-{{ checksum "visualtracking/build.gradle" }}-{{ checksum "visualtracking/version" }}-{{ checksum "examples/sample_java/build.gradle" }}-{{ checksum "examples/sample_kotlin/build.gradle" }}-{{ checksum "gradle-plugin/build.gradle" }}

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          name: Saving build gradle cache
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "core/build.gradle" }}-{{ checksum "core/version" }}-{{ checksum "inappmessaging/build.gradle" }}-{{ checksum "inappmessaging/version" }}-{{ checksum "notifications/build.gradle" }}-{{ checksum "notifications/version" }}-{{ checksum "variables/build.gradle" }}-{{ checksum "variables/version" }}-{{ checksum "visualtracking/build.gradle" }}-{{ checksum "visualtracking/version" }}-{{ checksum "examples/sample_java/build.gradle" }}-{{ checksum "examples/sample_kotlin/build.gradle" }}-{{ checksum "gradle-plugin/build.gradle" }}checksum "karte-sample-app/build.gradle" }}
          paths:
            - ~/.gradle

  add_google_services:
    steps:
      - run:
          name: Build modules
          command: |
            echo '{"project_info":{"project_number":"xxx","project_id":"xxx"},"client":[{"client_info":{"mobilesdk_app_id":"xxx","android_client_info":{"package_name":"io.karte.tracker_sample"}},"api_key":[{"current_key":"xxx"}]}]}' > examples/sample_java/google-services.json
            cp examples/sample_java/google-services.json examples/sample_kotlin/google-services.json
            ./gradlew --stacktrace assemble
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

jobs:
  test:
    executor:
      name: build
    steps:
      - checkout
      - setup_gradle
      - add_google_services
      - run:
          name: Test
          command: |
            ./gradlew --info testDebug
      - run:
          name: Lint
          command: |
            ./gradlew --stacktrace lintRelease
            ./gradlew --stacktrace ktlint
      - run:
          name: Doc check
          command: |
            ./gradlew clean dokka  # | grep 'No documentation' && { echo 'kdoc validation failed' ; exit 1; }
      - run:
          name: CodeCov
          command: |
            ./gradlew jacocoMerge
            bash <(curl -s https://codecov.io/bash)

  generate_docs:
    executor:
      name: build
    steps:
      - checkout
      - setup_gradle
      - add_google_services
      - run:
          name: Generate docs
          command: |
            if [ $EXEC_ENV = 'private' ]; then
              git config --global user.name "${GITHUB_USER_NAME}"
              git config --global user.email "${GITHUB_USER_EMAIL}"
              ./gradlew generateDocs
            fi

  publish:
    executor:
      name: build
    steps:
      - checkout
      - setup_gradle
      - run:
          name: Publish
          command: bash ./scripts/publish.sh

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - generate_docs:
          filters:
            branches:
              only:
                - master
      - publish:
          requires:
            - test
          filters:
            branches:
              only:
                - master
