apply plugin: 'maven-publish'
apply plugin: 'signing'

def getPropOrDefault(name, defaultValue = "") {
    if (rootProject.ext.has(name))
        return rootProject.ext.get(name)
    return defaultValue
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId group
            artifactId project.name
            version version

            if (project.plugins.findPlugin("com.android.library")) {
                from components.release
            } else {
                from components.java
            }
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', "KARTE SDK ${project.name}")
                root.appendNode('description', "${project.name} module for KARTE Android SDK")
                root.appendNode('url', gitUrl)
                root.children().last() + pomConfig
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            def sonatypeUsername = getPropOrDefault("ossrhUsername")
            def sonatypePassword = getPropOrDefault("ossrhPassword")
            if (sonatypeUsername.toString() == "") {
                println("not set sonatypeUserName")
            }
            if (sonatypePassword.toString() == "") {
                println("not set sonatypePassword")
            }
            credentials {
                username = "$sonatypeUsername"
                password = "$sonatypePassword"
            }
        }
    }
}
signing {
    sign publishing.publications.maven
}
